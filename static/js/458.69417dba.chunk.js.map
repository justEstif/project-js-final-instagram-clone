{"version":3,"file":"static/js/458.69417dba.chunk.js","mappings":"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","sources":["pages/sign-up.js","services/firebase.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport * as ROUTES from \"../constants/routes\";\nimport FirebaseContext from \"../context/firebase\";\nimport { doesUsernameExist } from \"../services/firebase\";\nimport { addDoc, collection } from \"firebase/firestore\";\nexport default function SignUp() {\n  const [error, setError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [emailAddress, setEmailAddress] = useState(\"\");\n\n  const navigate = useNavigate();\n  const isInvalid = password === \"\" || emailAddress === \"\";\n\n  const {\n    firebase: { db, auth },\n  } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    document.title = \"Signup - Instagram\";\n  }, []);\n\n  const handleSignup = async ({ preventDefault }) => {\n    preventDefault();\n    setError(\"\");\n    try {\n      const usernameExists = await doesUsernameExist(username);\n      if (!usernameExists) {\n        await createUserWithEmailAndPassword(auth, emailAddress, password);\n        await updateProfile(auth.currentUser, {\n          displayName: username,\n        });\n        await addDoc(collection(db, \"users\"), {\n          userId: auth.currentUser.uid,\n          username: username.toLowerCase(),\n          fullName: fullName,\n          emailAddress: emailAddress.toLowerCase(),\n          following: [],\n          followers: [],\n          dateCreated: Date.now(),\n        });\n        navigate(ROUTES.DASHBOARD);\n      } else {\n        setError(\"That username is already take, please try another.\");\n      }\n    } catch (error) {\n      setError(error.message);\n      setUsername(\"\");\n      setFullName(\"\");\n      setPassword(\"\");\n      setEmailAddress(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container flex mx-auto max-w-screen-md items-center h-screen\">\n      <div className=\"flex w-3/5\">\n        <img\n          src=\"/images/iphone-with-profile.jpg\"\n          alt=\"iPhone with Instagram\"\n        />\n      </div>\n      <div className=\"flex flex-col w-2/5 \">\n        <div className=\"flex flex-col items-center bg-white p-4 rounded border border-gray-primary mb-4\">\n          <h1 className=\"flex justify-center w-full\">\n            <img\n              src=\"/images/logo.png\"\n              alt=\"instagram\"\n              className=\"my-2 w-6/12\"\n            />\n          </h1>\n          {error && <p className=\"mb-4 text-xs text-red-primary\">{error}</p>}\n          <form onSubmit={(e) => handleSignup(e)} method=\"post\">\n            <input\n              aria-label=\"Enter your username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n              onChange={({ target: { value } }) => setUsername(value)}\n              value={username}\n            />\n            <input\n              aria-label=\"Enter your full name\"\n              type=\"text\"\n              placeholder=\"Full Name\"\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n              onChange={({ target: { value } }) => setFullName(value)}\n              value={fullName}\n            />\n            <input\n              aria-label=\"Enter your email address\"\n              type=\"text\"\n              placeholder=\"Email address\"\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n              onChange={({ target: { value } }) => setEmailAddress(value)}\n              value={emailAddress}\n            />\n            <input\n              aria-label=\"Enter your password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              className=\"text-sm text-gray-base w-full mr-3 py-5 px-4 h-2 border border-gray-primary rounded mb-2\"\n              onChange={({ target: { value } }) => setPassword(value)}\n              value={password}\n            />\n            <button\n              disabled={isInvalid}\n              type=\"submit\"\n              className={`bg-blue-medium w-full rounded h-8 font-bold text-white\n              ${isInvalid && \"opacity-50\"}`}>\n              Signup\n            </button>\n          </form>\n        </div>\n        <div className=\"flex justify-center items-center flex-col w-full bg-white p-4 border border-gray-primary rounded\">\n          <p className=\"text-sm\">\n            Have an account?{` `}\n            <Link to={ROUTES.LOGIN} className=\"font-bold text-blue-medium\">\n              Login\n            </Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { firebase } from \"../lib/firebase\";\nimport {\n  arrayRemove,\n  arrayUnion,\n  collection,\n  doc,\n  getDocs,\n  limit,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\n\nconst { db } = firebase;\n\nexport async function doesUsernameExist(username) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"username\", \"==\", username.toLowerCase()));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.length > 0; // return true if some doc exists\n}\n\nexport async function getUserByUsername(username) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"username\", \"==\", username.toLowerCase()));\n  const querySnapshot = await getDocs(q);\n  const user = querySnapshot.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\n\nexport async function getUserByUserId(userId) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"userId\", \"==\", userId));\n  const querySnapshot = await getDocs(q);\n  const user = querySnapshot.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\n\nexport async function getSuggestedProfiles(userId, following) {\n  const usersRef = collection(db, \"users\");\n  const resultDoc = await getDocs(usersRef, limit(10));\n\n  return resultDoc.docs\n    .map((item) => ({\n      ...item.data(),\n      docId: item.id,\n    }))\n    .filter(\n      (item) => item.userId !== userId && !following.includes(item.userId)\n    );\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId,\n  profileId,\n  isFollowingProfile\n) {\n  const followerDocRef = doc(db, \"users\", loggedInUserDocId);\n  return updateDoc(followerDocRef, {\n    following: isFollowingProfile\n      ? arrayRemove(profileId)\n      : arrayUnion(profileId),\n  });\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId,\n  userId,\n  isFollowerProfile\n) {\n  const followedDocRef = doc(db, \"users\", profileDocId);\n  return updateDoc(followedDocRef, {\n    followers: isFollowerProfile ? arrayRemove(userId) : arrayUnion(userId),\n  });\n}\n\nexport async function getPhotos(userId, following) {\n  const photosRef = collection(db, \"photos\");\n  const queryUserId = query(photosRef, where(\"userId\", \"in\", following));\n  const querySnapshot = await getDocs(queryUserId);\n  const userFollowedPhotos = querySnapshot.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      const user = await getUserByUserId(photo.userId);\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n  return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUsername(username) {\n  const [user] = await getUserByUsername(username);\n  const photosRef = collection(db, \"photos\");\n  const queryUserId = query(photosRef, where(\"userId\", \"==\", user.userId));\n  const querySnapshot = await getDocs(queryUserId);\n  const photos = querySnapshot.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n  return photos;\n}\n\nexport async function isUserFollowingProfile(username, profileUserId) {\n  const [user] = await getUserByUsername(username);\n  return user.following.includes(profileUserId) ? true : false;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  await updateLoggedInUserFollowing(\n    activeUserDocId,\n    profileUserId,\n    isFollowingProfile\n  );\n  await updateFollowedUserFollowers(\n    profileDocId,\n    followingUserId,\n    isFollowingProfile\n  );\n}\n"],"names":["SignUp","useState","error","setError","password","setPassword","username","setUsername","fullName","setFullName","emailAddress","setEmailAddress","navigate","useNavigate","isInvalid","useContext","FirebaseContext","firebase","db","auth","useEffect","document","title","handleSignup","preventDefault","doesUsernameExist","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","addDoc","collection","userId","uid","toLowerCase","following","followers","dateCreated","Date","now","ROUTES","message","className","src","alt","onSubmit","e","method","type","placeholder","onChange","value","target","disabled","to","usersRef","q","query","where","getDocs","querySnapshot","docs","length","getUserByUsername","user","map","item","data","docId","id","getUserByUserId","getSuggestedProfiles","limit","resultDoc","filter","includes","updateLoggedInUserFollowing","loggedInUserDocId","profileId","isFollowingProfile","followerDocRef","doc","updateDoc","arrayRemove","arrayUnion","updateFollowedUserFollowers","profileDocId","isFollowerProfile","followedDocRef","getPhotos","photosRef","queryUserId","userFollowedPhotos","photo","Promise","all","userLikedPhoto","likes","photosWithUserDetails","getUserPhotosByUsername","photos","isUserFollowingProfile","profileUserId","toggleFollow","activeUserDocId","followingUserId"],"sourceRoot":""}