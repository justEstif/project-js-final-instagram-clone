{"version":3,"file":"static/js/957.55f18afc.chunk.js","mappings":"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","sources":["components/header.js","hooks/use-user.js","hooks/use-photos.js","components/post/header.js","components/post/image.js","components/post/footer.js","components/post/actions.js","components/post/add-comment.js","components/post/comments.js","components/post/index.js","components/timeline.js","components/sidebar/user.js","components/sidebar/suggestedProfile.js","components/sidebar/suggestions.js","components/sidebar/index.js","pages/dashboard.js","services/firebase.js","utils/getImg.js"],"sourcesContent":["import { useContext, Fragment } from \"react\";\nimport { signOut } from \"firebase/auth\";\nimport { Link } from \"react-router-dom\";\nimport FirebaseContext from \"../context/firebase\";\nimport UserContext from \"../context/user\";\nimport * as ROUTES from \"../constants/routes\";\nimport getImg from \"../utils/getImg\";\nconst Header = () => {\n  const {\n    firebase: { auth },\n  } = useContext(FirebaseContext);\n\n  const { user } = useContext(UserContext);\n  return (\n    <header className=\"h-16 bg-white border-b border-gray-primary mb-8\">\n      <div className=\"container mx-auto max-w-screen-lg h-full\">\n        <div className=\"flex justify-between h-full\">\n          <div className=\"text-gray-700 text-center flex items-center justify-center cursor-pointer\">\n            <h1 className=\"flex w-full\">\n              <Link to={ROUTES.DASHBOARD} aria-label=\"Instagram logo\">\n                <img\n                  src=\"/images/logo.png\"\n                  className=\"mt-2 w-6/12\"\n                  alt=\"instagram logo\"\n                />\n              </Link>\n            </h1>\n          </div>\n          <div className=\"text-gray-700 text-center flex items-center justify-center\">\n            {user ? (\n              <Fragment>\n                <Link to={ROUTES.DASHBOARD} aria-label=\"Dashboard\">\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n                    />\n                  </svg>\n                </Link>\n                <button\n                  title=\"Sign out\"\n                  type=\"button\"\n                  onKeyDown={({ key }) => key === \"Enter\" && signOut(auth)}\n                  onClick={() => signOut(auth)}>\n                  <svg\n                    className=\"w-8 mr-6 text-black-light cursor-pointer\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\">\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"\n                    />\n                  </svg>\n                </button>\n                <div className=\"flex items-center cursor-pointer\">\n                  <Link to={`/p/${user.displayName}`}>\n                    <img\n                      className=\"rounded-full h-8 w-8 flex\"\n                      src={getImg(`/images/avatars/${user.displayName}.jpg`)}\n                      alt={`${user.displayName} img`}\n                    />\n                  </Link>\n                </div>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <Link to={ROUTES.LOGIN}>\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-medium font-bold text-sm rounded text-white w-20 h-8  flex items-center justify-center\">\n                    Log In\n                  </button>\n                </Link>\n                <Link to={ROUTES.SIGN_UP}>\n                  <button\n                    type=\"button\"\n                    className=\" text-blue-medium font-bold text-sm rounded w-20 h-8\">\n                    Sign Up\n                  </button>\n                </Link>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import { useState, useEffect, useContext } from \"react\";\nimport UserContext from \"../context/user\";\nimport { getUserByUserId } from \"../services/firebase\";\n\nconst useUser = () => {\n  const [activeUser, setActiveUser] = useState({});\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    const getUserObjByUserId = async () => {\n      const [response] = await getUserByUserId(user.uid);\n      setActiveUser(response);\n    };\n    if (user?.uid) {\n      getUserObjByUserId();\n    }\n  }, [user]);\n\n  return { user: activeUser };\n};\n\nexport default useUser;\n","import { useState, useEffect, useContext } from \"react\";\nimport UserContext from \"../context/user\";\nimport { getUserByUserId, getPhotos } from \"../services/firebase\";\n\nconst usePhotos = () => {\n  const [photos, setPhotos] = useState(null);\n\n  const {\n    user: { uid: userId = \"\" },\n  } = useContext(UserContext);\n\n  useEffect(() => {\n    const getTimelinePhotos = async () => {\n      const [{ following }] = await getUserByUserId(userId);\n      let followedUserPhotos = [];\n      if (following.length > 0) {\n        followedUserPhotos = await getPhotos(userId, following);\n      }\n      followedUserPhotos.sort((a, b) => b.dateCreated - a.dateCreated);\n      setPhotos(followedUserPhotos);\n    };\n\n    getTimelinePhotos();\n  }, [userId]);\n\n  return { photos };\n};\n\nexport default usePhotos;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport getImg from \"../../utils/getImg\";\nconst Header = ({ username }) => {\n  return (\n    <div className=\"flex border-b border-gray-primary h-4 p-4 py-8\">\n      <div className=\"flex items-center\">\n        <Link to={`/p/${username}`} className=\"flex items-center\">\n          <img\n            src={getImg(`./images/avatars/${username}.jpg`)}\n            className=\"rounded-full h-8 w-8 flex mr-3\"\n            alt={`post by ${username}`}\n          />\n          <p className=\"font-bold\">{username}</p>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import PropTypes from \"prop-types\";\nconst Image = ({ src, caption }) => {\n  return <img src={src} alt={caption} />;\n};\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  caption: PropTypes.string.isRequired,\n};\nexport default Image;\n","import PropTypes from \"prop-types\";\nconst Footer = ({ caption, username }) => {\n  return (\n    <div className=\"p-4 pt-2 pb-0\">\n      <span className=\"mr-1 font-bold\">{username}</span>\n      <span>{caption}</span>\n    </div>\n  );\n};\n\nFooter.propTypes = {\n  caption: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\nexport default Footer;\n","import { useState, useContext, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FirebaseContext from \"../../context/firebase\";\nimport UserContext from \"../../context/user\";\nimport { arrayRemove, arrayUnion, doc, updateDoc } from \"firebase/firestore\";\n\nconst Actions = ({ docId, totalLikes, likedPhoto, handleFocus }) => {\n  const {\n    user: { uid: userId = \"\" },\n  } = useContext(UserContext);\n\n  const {\n    firebase: { db },\n  } = useContext(FirebaseContext);\n\n  const [toggleLiked, setToggleLiked] = useState(likedPhoto);\n  const [likes, setLikes] = useState(totalLikes);\n  const handleToggleLiked = async () => {\n    setToggleLiked((toggleLiked) => !toggleLiked);\n    const photoDocRef = doc(db, \"photos\", docId);\n    await updateDoc(photoDocRef, {\n      likes: toggleLiked ? arrayRemove(userId) : arrayUnion(userId),\n    });\n    setLikes((likes) => (toggleLiked ? likes - 1 : likes + 1));\n  };\n\n  return (\n    <Fragment>\n      <div className=\"flex justify-between p-4\">\n        <div className=\"flex\">\n          <svg\n            onClick={handleToggleLiked}\n            onKeyDown={({ key }) => key === \"Enter\" && handleToggleLiked()}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            tabIndex={0}\n            className={`w-8 mr-4 select-none cursor-pointer focus:outline-none ${\n              toggleLiked ? \"fill-red text-red-primary\" : \"text-black-light\"\n            }`}>\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z\"\n            />\n          </svg>\n          <svg\n            onClick={handleFocus}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                handleFocus();\n              }\n            }}\n            className=\"w-8 text-black-light select-none cursor-pointer focus:outline-none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            tabIndex={0}>\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"\n            />\n          </svg>\n        </div>\n      </div>\n      <div className=\"p-4 py-0\">\n        <p className=\"font-bold\">\n          {likes === 1 ? `${likes} like` : `${likes} likes`}\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nActions.propTypes = {\n  docId: PropTypes.string.isRequired,\n  totalLikes: PropTypes.number.isRequired,\n  likedPhoto: PropTypes.bool.isRequired,\n  handleFocus: PropTypes.func.isRequired,\n};\n\nexport default Actions;\n","import { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FirebaseContext from \"../../context/firebase\";\nimport UserContext from \"../../context/user\";\nimport { doc, arrayUnion, updateDoc } from \"firebase/firestore\";\n\nconst AddComment = ({ docId, comments, setComments, commentInput }) => {\n  const [comment, setComment] = useState(\"\");\n  const {\n    firebase: { db },\n  } = useContext(FirebaseContext);\n\n  const {\n    user: { displayName },\n  } = useContext(UserContext);\n\n  const handleSubmitComment = (event) => {\n    const updatePhotoComments = async () => {\n      const photoRef = doc(db, \"photos\", docId);\n      return updateDoc(photoRef, { comments: arrayUnion(comment) });\n    };\n    event.preventDefault();\n    setComments([...comments, { displayName, comment }]);\n    setComment(\"\");\n    updatePhotoComments();\n  };\n\n  return (\n    <div className=\"border-t border-gray-primary\">\n      <form\n        className=\"flex justify-between pl-0 pr-5\"\n        method=\"POST\"\n        onSubmit={(e) =>\n          comment.length >= 1 ? handleSubmitComment : e.preventDefault()\n        }>\n        <input\n          aria-label=\"Add a comment\"\n          autoComplete=\"off\"\n          className=\"text-sm text-gray-base w-full mr-3 py-5 px-4\"\n          type=\"text\"\n          name=\"add-comment\"\n          placeholder=\"Add a comment...\"\n          value={comment}\n          onChange={({ target }) => setComment(target.value)}\n          ref={commentInput}\n        />\n        <button\n          className={`text-sm font-bold text-blue-medium ${\n            !comment && \"opacity-25\"\n          }`}\n          type=\"button\"\n          disabled={comment.length < 1}\n          onClick={handleSubmitComment}>\n          Post\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddComment.protoTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  setComment: PropTypes.func.isRequired,\n  commentInput: PropTypes.object,\n};\n\nexport default AddComment;\n","import PropTypes from \"prop-types\";\nimport { Fragment, useState } from \"react\";\nimport { formatDistance } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport AddComment from \"./add-comment\";\nconst Comments = ({ docId, comments: allComments, posted, commentInput }) => {\n  const [comments, setComments] = useState(allComments);\n  return (\n    <Fragment>\n      <div className=\"p-4 pt-1 pb-4\">\n        {comments.length >= 1 && (\n          <p className=\"text-sm text-gray-base mb-1 cursor-pointer\">\n            View all comments\n          </p>\n        )}\n        {comments.slice(0, 3).map((item) => (\n          <p key={`${item.comment}-${item.displayName}`} className=\"mb-1\">\n            <Link to={`/p/${item.displayName}`}>\n              <span className=\"mr-1 font-bold\">{item.displayName}</span>\n              <span>{item.comment}</span>\n            </Link>\n          </p>\n        ))}\n        <p className=\"text-gray-base uppercase text-xs mt-2\">\n          {formatDistance(posted, new Date())} ago\n        </p>\n      </div>\n      <AddComment\n        docId={docId}\n        comments={comments}\n        setComments={setComments}\n        commentInput={commentInput}\n      />\n    </Fragment>\n  );\n};\n\nComments.propTypes = {\n  docId: PropTypes.string.isRequired,\n  comments: PropTypes.array.isRequired,\n  posted: PropTypes.number.isRequired,\n  commentInput: PropTypes.object.isRequired,\n};\nexport default Comments;\n","import { useRef } from \"react\";\nimport Header from \"./header\";\nimport Image from \"./image\";\nimport Footer from \"./footer\";\nimport Actions from \"./actions\";\nimport Comments from \"./comments\";\nimport PropTypes from \"prop-types\";\nconst Post = ({ content }) => {\n  const commentInput = useRef(null);\n  const handleFocus = () => commentInput.current.focus();\n  return (\n    <div className=\"rounded col-span-4 border bg-white border-gray-primary mb-10\">\n      <Header username={content.username} />\n      <Image src={content.imageSrc} caption={content.caption} />\n      <Actions\n        docId={content.docId}\n        totalLikes={content.likes.length}\n        likedPhoto={content.userLikedPhoto}\n        handleFocus={handleFocus}\n      />\n      <Footer caption={content.caption} username={content.username} />\n      <Comments\n        docId={content.docId}\n        comments={content.comments}\n        posted={content.dateCreated}\n        commentInput={commentInput}\n      />\n    </div>\n  );\n};\n\nPost.propTypes = {\n  content: PropTypes.shape({\n    caption: PropTypes.string.isRequired,\n    comments: PropTypes.array.isRequired,\n    dateCreated: PropTypes.number.isRequired,\n    docId: PropTypes.string.isRequired,\n    imageSrc: PropTypes.string.isRequired,\n    likes: PropTypes.array.isRequired,\n    photoId: PropTypes.number.isRequired,\n    userId: PropTypes.string.isRequired,\n    userLatitude: PropTypes.string.isRequired,\n    userLongitude: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n  }),\n};\nexport default Post;\n","import { Fragment } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport usePhotos from \"../hooks/use-photos\";\nimport Post from \"./post\";\nconst Timeline = () => {\n  const { photos } = usePhotos();\n  return (\n    <div className=\"container col-span-2\">\n      {!photos ? (\n        <Fragment>\n          <Skeleton count={4} width={640} height={500} className=\"mb-5\" />\n        </Fragment>\n      ) : photos?.length > 0 ? (\n        photos.map((content) => <Post key={content.docId} content={content} />)\n      ) : (\n        <p className=\"text-center text-2xl\">Follow people to see photos</p>\n      )}\n    </div>\n  );\n};\n\nexport default Timeline;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Skeleton from \"react-loading-skeleton\";\nimport getImg from \"../../utils/getImg\";\n\nconst User = ({ username, fullName }) => {\n  return (\n    <Fragment>\n      {username && fullName ? (\n        <Link\n          to={`/p/${username}`}\n          className=\"grid grid-cols-4 gap-4 mb-6 items-center\">\n          <div className=\"flex items-center justify-between col-span-1\">\n            <img\n              className=\"rounded-full w-16 flex mr-3\"\n              src={getImg(`/images/avatars/${username}.jpg`)}\n              alt=\"user profile img\"\n            />\n          </div>\n          <div className=\"col-span-3\">\n            <p className=\"font-bold text-sm\">{username}</p>\n            <p className=\"font text-sm\">{fullName}</p>\n          </div>\n        </Link>\n      ) : (\n        <Skeleton count={1} height={61} />\n      )}\n    </Fragment>\n  );\n};\n\nUser.propTypes = {\n  username: PropTypes.string,\n  fullName: PropTypes.string,\n};\n\nexport default User;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport getImg from \"../../utils/getImg\";\nimport { Link } from \"react-router-dom\";\nimport {\n  updateFollowedUserFollowers,\n  updateLoggedInUserFollowing,\n} from \"../../services/firebase\";\nconst SuggestedProfile = ({\n  profileDocId,\n  profileId,\n  username,\n  userId,\n  loggedInUserDocId,\n}) => {\n  const [followed, setFollowed] = useState(false);\n  const handleFollowUser = async () => {\n    setFollowed(true);\n    await updateFollowedUserFollowers(profileDocId, userId, false);\n    await updateLoggedInUserFollowing(loggedInUserDocId, profileId, false);\n  };\n  return !followed ? (\n    <div className=\"flex flex-row items-center align-items justify-between\">\n      <div className=\"flex items-center justify-between\">\n        <img\n          className=\"rounded-full w-8 flex mr-3\"\n          src={getImg(`/images/avatars/${username}.jpg`)}\n          alt={`${username} img`}\n        />\n        <Link to={`/p/${username}`}>\n          <p className=\"font-bold text-sm\">{username}</p>\n        </Link>\n      </div>\n      <button\n        onClick={() => handleFollowUser()}\n        className=\"text-xs font-bold text-blue-medium\"\n        type=\"button\">\n        Follow\n      </button>\n    </div>\n  ) : null;\n};\n\nSuggestedProfile.prototype = {\n  username: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n  loggedInUserDocId: PropTypes.string.isRequired,\n  profileDocId: PropTypes.string.isRequired,\n  profileId: PropTypes.string.isRequired,\n};\n\nexport default SuggestedProfile;\n","import { Fragment, useState, useEffect } from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport PropTypes from \"prop-types\";\nimport { getSuggestedProfiles } from \"../../services/firebase\";\nimport SuggestedProfile from \"./suggestedProfile\";\nconst Suggestions = ({ userId, following, loggedInUserDocId }) => {\n  const [profiles, setProfiles] = useState(null);\n\n  useEffect(() => {\n    const suggestedProfiles = async () => {\n      const response = await getSuggestedProfiles(userId, following);\n      setProfiles(response);\n    };\n    userId && suggestedProfiles();\n  }, [userId, following]);\n\n  return (\n    <Fragment>\n      {!profiles ? (\n        <Skeleton count={1} height={150} className=\"mt-5\" />\n      ) : profiles.length > 0 ? (\n        <div className=\"rounded flex flex-col\">\n          <div className=\"text-sm flex items-center justify-between mb-2\">\n            <p className=\"font-bold text-gray-base\">Suggestions for you</p>\n          </div>\n          <div className=\"mt-4 grid gap-5\">\n            {profiles.map((profile) => (\n              <SuggestedProfile\n                username={profile.username}\n                userId={userId}\n                loggedInUserDocId={loggedInUserDocId}\n                key={profile.docId}\n                profileDocId={profile.docId}\n                profileId={profile.userId}\n              />\n            ))}\n          </div>\n        </div>\n      ) : null}\n    </Fragment>\n  );\n};\n\nSuggestions.propTypes = {\n  userId: PropTypes.string,\n  following: PropTypes.array,\n  loggedInUserDocId: PropTypes.string,\n};\nexport default Suggestions;\n","import useUser from \"../../hooks/use-user\";\nimport User from \"./user\";\nimport Suggestions from \"./suggestions\";\n\nconst Sidebar = () => {\n  // , get the info of the logged in user\n  const {\n    user: { fullName, username, userId, following, docId },\n  } = useUser();\n\n  return (\n    <div className=\"p-4\">\n      <User username={username} fullName={fullName} />\n      <Suggestions\n        userId={userId}\n        following={following}\n        loggedInUserDocId={docId}\n      />\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import { useEffect } from \"react\";\nimport Timeline from \"../components/timeline\";\nimport Sidebar from \"../components/sidebar\";\nimport Header from \"../components/header\";\n\nconst Dashboard = () => {\n  useEffect(() => {\n    document.title = \"Instagram\";\n  });\n  return (\n    <div className=\"bg-gray-background\">\n      <Header />\n      <div className=\"grid grid-cols-3 gap-4 justify-between mx-auto max-w-screen-lg\">\n        <Timeline />\n        <Sidebar />\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import { firebase } from \"../lib/firebase\";\nimport {\n  arrayRemove,\n  arrayUnion,\n  collection,\n  doc,\n  getDocs,\n  limit,\n  query,\n  updateDoc,\n  where,\n} from \"firebase/firestore\";\n\nconst { db } = firebase;\n\nexport async function doesUsernameExist(username) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"username\", \"==\", username.toLowerCase()));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.length > 0; // return true if some doc exists\n}\n\nexport async function getUserByUsername(username) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"username\", \"==\", username.toLowerCase()));\n  const querySnapshot = await getDocs(q);\n  const user = querySnapshot.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\n\nexport async function getUserByUserId(userId) {\n  const usersRef = collection(db, \"users\");\n  const q = query(usersRef, where(\"userId\", \"==\", userId));\n  const querySnapshot = await getDocs(q);\n  const user = querySnapshot.docs.map((item) => ({\n    ...item.data(),\n    docId: item.id,\n  }));\n  return user;\n}\n\nexport async function getSuggestedProfiles(userId, following) {\n  const usersRef = collection(db, \"users\");\n  const resultDoc = await getDocs(usersRef, limit(10));\n\n  return resultDoc.docs\n    .map((item) => ({\n      ...item.data(),\n      docId: item.id,\n    }))\n    .filter(\n      (item) => item.userId !== userId && !following.includes(item.userId)\n    );\n}\n\nexport async function updateLoggedInUserFollowing(\n  loggedInUserDocId,\n  profileId,\n  isFollowingProfile\n) {\n  const followerDocRef = doc(db, \"users\", loggedInUserDocId);\n  return updateDoc(followerDocRef, {\n    following: isFollowingProfile\n      ? arrayRemove(profileId)\n      : arrayUnion(profileId),\n  });\n}\n\nexport async function updateFollowedUserFollowers(\n  profileDocId,\n  userId,\n  isFollowerProfile\n) {\n  const followedDocRef = doc(db, \"users\", profileDocId);\n  return updateDoc(followedDocRef, {\n    followers: isFollowerProfile ? arrayRemove(userId) : arrayUnion(userId),\n  });\n}\n\nexport async function getPhotos(userId, following) {\n  const photosRef = collection(db, \"photos\");\n  const queryUserId = query(photosRef, where(\"userId\", \"in\", following));\n  const querySnapshot = await getDocs(queryUserId);\n  const userFollowedPhotos = querySnapshot.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n\n  const photosWithUserDetails = await Promise.all(\n    userFollowedPhotos.map(async (photo) => {\n      let userLikedPhoto = false;\n      if (photo.likes.includes(userId)) {\n        userLikedPhoto = true;\n      }\n      const user = await getUserByUserId(photo.userId);\n      const { username } = user[0];\n      return { username, ...photo, userLikedPhoto };\n    })\n  );\n  return photosWithUserDetails;\n}\n\nexport async function getUserPhotosByUsername(username) {\n  const [user] = await getUserByUsername(username);\n  const photosRef = collection(db, \"photos\");\n  const queryUserId = query(photosRef, where(\"userId\", \"==\", user.userId));\n  const querySnapshot = await getDocs(queryUserId);\n  const photos = querySnapshot.docs.map((photo) => ({\n    ...photo.data(),\n    docId: photo.id,\n  }));\n  return photos;\n}\n\nexport async function isUserFollowingProfile(username, profileUserId) {\n  const [user] = await getUserByUsername(username);\n  return user.following.includes(profileUserId) ? true : false;\n}\n\nexport async function toggleFollow(\n  isFollowingProfile,\n  activeUserDocId,\n  profileDocId,\n  profileUserId,\n  followingUserId\n) {\n  await updateLoggedInUserFollowing(\n    activeUserDocId,\n    profileUserId,\n    isFollowingProfile\n  );\n  await updateFollowedUserFollowers(\n    profileDocId,\n    followingUserId,\n    isFollowingProfile\n  );\n}\n","const getImg = (imgSrc) => {\n  const img = new Image();\n  const defaultSrc = \"./images/avatars/default.png\";\n  img.src = imgSrc;\n  return img.height ? imgSrc : defaultSrc;\n};\n\nexport default getImg;\n"],"names":["auth","useContext","FirebaseContext","firebase","user","UserContext","className","to","ROUTES","src","alt","Fragment","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","title","type","onKeyDown","key","signOut","onClick","displayName","getImg","useState","activeUser","setActiveUser","useEffect","getUserObjByUserId","getUserByUserId","uid","response","photos","setPhotos","userId","getTimelinePhotos","following","followedUserPhotos","length","getPhotos","sort","a","b","dateCreated","username","caption","docId","totalLikes","likedPhoto","handleFocus","db","toggleLiked","setToggleLiked","likes","setLikes","handleToggleLiked","photoDocRef","doc","updateDoc","arrayRemove","arrayUnion","tabIndex","event","AddComment","comments","setComments","commentInput","comment","setComment","handleSubmitComment","updatePhotoComments","photoRef","preventDefault","method","onSubmit","e","autoComplete","name","placeholder","value","onChange","target","ref","disabled","protoTypes","PropTypes","allComments","posted","slice","map","item","formatDistance","Date","content","useRef","imageSrc","userLikedPhoto","current","focus","usePhotos","count","width","height","fullName","SuggestedProfile","profileDocId","profileId","loggedInUserDocId","followed","setFollowed","handleFollowUser","updateFollowedUserFollowers","updateLoggedInUserFollowing","prototype","profiles","setProfiles","suggestedProfiles","getSuggestedProfiles","profile","useUser","document","doesUsernameExist","usersRef","collection","q","query","where","toLowerCase","getDocs","querySnapshot","docs","getUserByUsername","data","id","limit","resultDoc","filter","includes","isFollowingProfile","followerDocRef","isFollowerProfile","followedDocRef","followers","photosRef","queryUserId","userFollowedPhotos","photo","Promise","all","photosWithUserDetails","getUserPhotosByUsername","isUserFollowingProfile","profileUserId","toggleFollow","activeUserDocId","followingUserId","imgSrc","img","Image"],"sourceRoot":""}